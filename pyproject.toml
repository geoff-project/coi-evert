# SPDX-FileCopyrightText: 2020-2023 CERN
# SPDX-FileCopyrightText: 2023 GSI Helmholtzzentrum fÃ¼r Schwerionenforschung
# SPDX-FileNotice: All rights not expressly granted are reserved.
#
# SPDX-License-Identifier: GPL-3.0-or-later OR EUPL-1.2+

[build-system]
requires = [
    'setuptools >= 45',
    'setuptools-scm[toml] ~= 7.0',
    'wheel',
]
build-backend = 'setuptools.build_meta'

[project]
dynamic = ['version']
name = 'cernml-coi-evert'
authors = [
    {name = 'Nico Madysa', email = 'nico.madysa@cern.ch'},
]
description = 'Turn optimization loops inside out'
readme = 'README.md'
license = {file='COPYING'}
requires-python = '>=3.7'
dependencies = [
    'typing-extensions; python_version < "3.10"',
]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Science/Research',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Scientific/Engineering :: Physics',
    'Typing :: Typed',
]

[project.optional-dependencies]
examples = [
    'cernml-coi ~= 0.8.13',
    'cernml-coi-optimizers[scipy] ~= 1.1',
    'numpy ~= 1.20',
]
[tool.setuptools]
zip-safe = true
package-data = {'*' = ['py.typed']}

[tool.setuptools_scm]

[tool.black]
target-version = ['py37', 'py38', 'py39']

[tool.isort]
profile = 'black'
known_first_party = ['cernml']

[tool.pytest.ini_options]
addopts = '--doctest-modules'
testpaths = ['src', 'tests']
asyncio_mode = 'auto'
doctest_optionflags = ['ELLIPSIS']
markers = [
    'slow: marks tests as slow (deselect with `-m "not slow"`)'
]

[tool.coverage.run]
source = ['src/']
omit = ['src/cernml/evert/_runner.py']
branch = true

[tool.coverage.report]
exclude_also = [
    '^\s*from .* import',
    '^\s*import ',
    'if \w*\.TYPE_CHECKING',
    '^\s*\.\.\.$',
    'raise NotImplementedError',
]

[tool.pylint.main]
ignore-patterns = ['.*\.pyi$', 'test_.*\.py$', 'docs/conf.py']

[tool.pylint.basic]
good-names = ['i', 'j', 'k', 'x0', '_']

[tool.pylint.'messages control']
disable = ['fixme', 'line-too-long', 'similarities']

[tool.mypy]
strict = true
disallow_untyped_defs = true
explicit_package_bases = true
mypy_path = '$MYPY_CONFIG_FILE_DIR/src'

[[tool.mypy.overrides]]
module = ['scipy.*', 'gym.*', 'matplotlib.*']
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ['examples.example']
warn_return_any = false

[tool.ruff]
fix = true
extend-select = [
    'A', 'ARG', 'ASYNC', 'B', 'C4', 'C90', 'COM818', 'D', 'DTZ', 'EXE', 'FLY',
    'I', 'ISC', 'NPY', 'PD', 'PERF', 'PGH', 'PIE', 'PT', 'PTH', 'PYI', 'RET',
    'RSE', 'RUF', 'SIM', 'SLOT', 'T10', 'TRY',
]
ignore = [
    'D102',   # To be fixed
    'D105',   # Missing docstring in magic method
    'D107',   # Missing docstring in __init__
    'D412',   # No blank lines allowed between a section header and its content
    'D417',   # Missing argument description in the docstring
    'RUF100', # Unused `noqa` directive
    'TRY301', # Abstract `raise` to an inner function
    'TRY003', # Avoid specifying long messages outside the exception class
]
unfixable = [
    'F401',  # unused-import
]
src = ['examples', 'src', 'test']
target-version = 'py37'

[tool.ruff.per-file-ignores]
'src/cernml/evert/_runner.py' = ['ARG', 'B', 'C', 'SIM', 'PYI036']
'{tests,docs}/*' = ['A001', 'ARG', 'D']
# 'stubs/*' = ['A']

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.isort]
known-first-party = ['cernml']

[tool.ruff.pycodestyle]
max-doc-length = 72

[tool.ruff.pydocstyle]
convention = 'google'
ignore-decorators = ['overload', 'overrides']
